<source>
  @type syslog
  port 5140
  bind 0.0.0.0
  tag system.tcp
  protocol tcp
  <parse>
    @type regexp
    expression /^(?<time>\d{4}-\d{2}-\d{2} \d{2}:\d{2}:\d{2}) (?<timezone>\+\d{4}) \[(?<level>\w+)\]: (?<message>.*)$/
  </parse>
</source>

<source>
  @type syslog
  port 5140
  bind 0.0.0.0
  tag system.udp
  protocol udp
  <parse>
    @type regexp
    expression /^(?<time>\d{4}-\d{2}-\d{2} \d{2}:\d{2}:\d{2}) (?<timezone>\+\d{4}) \[(?<level>\w+)\]: (?<message>.*)$/
  </parse>
</source>

# Add processing for synthetic logs
<filter system.**>
  @type parser
  key_name message
  format regexp
  expression /^(?<app_message>.+)$/
  reserve_data true
</filter>

# Add metadata and structure
<filter system.**>
  @type record_transformer
  enable_ruby true
  <record>
    hostname "#{Socket.gethostname}"
    tag "${tag}"
    log_type "synthetic"
    environment "test"
  </record>
</filter>

# Output to Loki
<match system.**>
  @type loki
  url "#{ENV['LOKI_URL']}/loki/api/v1/push"
  username "#{ENV['LOKI_USERNAME']}"
  password "#{ENV['LOKI_PASSWORD']}"
  
  extra_labels {"job":"synthetic_syslog", "env":"test"}
  
  label_keys ["hostname", "facility", "severity", "program", "environment", "log_type"]
  
  <buffer>
    @type memory
    chunk_limit_size 1m
    flush_interval 5s
    flush_at_shutdown true
    retry_max_times 5
    retry_type exponential_backoff
  </buffer>
</match>
